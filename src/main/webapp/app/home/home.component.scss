/* ==========================================================================
Main page styles
========================================================================== */
@font-face {
  font-family: 'alro';
  src: url('../../content/fonts/alro-alro-bold-700.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'neue-plak';
  src: url('../../content/fonts/NeuePlakcustom3.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

.hero-center-content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

h4 {
  font-family: 'neue-plak', sans-serif;
  color: #ffffff;
  font-size: 1.1vw !important;
  letter-spacing: 2px;
  text-transform: none !important;
  font-weight: 200 !important;
}

.hero-title {
  font-family: 'neue-plak' !important;
  font-size: 3vw;
  color: #ffffff;
  text-align: center;
  margin-top: 4vh;
  margin-right: 1vh;
}

.columns {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  width: 82%;
  height: 100%;
  margin-top: -4rem;
}

.column {
  flex-grow: 1;
  flex-basis: 50%;
  text-align: center;
  max-height: 80vh;
  padding: 50px;
}

.logo-img {
  height: 45px;
  width: 15vw;
  display: inline-block;
  vertical-align: middle;
  background: url('../../content/images/lowertones-white-logo-alphabg-large.png') no-repeat center center;
  background-size: contain;
  transform: scale(1.3);
  position: relative;
  top: -3px;
  //padding-right: 160px;
}

.scroll-down-container {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  margin-top: 72vh;
}

.scroll-down {
  font-family: 'neue-plak' !important;
  font-size: 0.9vw;
  color: #ffffff;
  margin-bottom: 3vh;
  font-weight: bold;
  letter-spacing: 1px;
}

.chevron {
  position: absolute;
  width: 28px;
  height: 8px;
  opacity: 0;
  transform: scale3d(0.5, 0.5, 0.5);
  animation: move 3s ease-out infinite;
}

.chevron:first-child {
  animation: move 3s ease-out 1s infinite;
}

.chevron:nth-child(2) {
  animation: move 3s ease-out 2s infinite;
}

.chevron:before,
.chevron:after {
  content: ' ';
  position: absolute;
  top: 0;
  height: 100%;
  width: 51%;
  background: #fff;
}

.chevron:before {
  left: 0;
  transform: skew(0deg, 30deg);
}

.chevron:after {
  right: 0;
  width: 50%;
  transform: skew(0deg, -30deg);
}

@keyframes move {
  25% {
    opacity: 1;
  }
  33% {
    opacity: 1;
    transform: translateY(30px);
  }
  67% {
    opacity: 1;
    transform: translateY(40px);
  }
  100% {
    opacity: 0;
    transform: translateY(55px) scale3d(0.5, 0.5, 0.5);
  }
}

.particle {
  /* Starting values */
  --angle: (5 * var(--index));
  --radius: 20;
  --x: calc(sin(var(--angle)) * var(--radius) * 1vmin);
  --y: calc(cos(var(--angle)) * var(--radius) * 1vmin);

  --angle2: calc(var(--index) * 1turn / var(--total));
  --x2: calc(sin(var(--angle2)) * var(--radius) * 1vmin);
  --y2: calc(cos(var(--angle2)) * var(--radius) * 1vmin);

  --size: 3;
  --speed: 3s;
  --delay: calc(var(--index) * var(--speed) / var(--total) * 4);

  --hue-angle: 10;
  --hue-range: 90;
  --hue-start: 20;

  /* Animation */
  animation: animation var(--speed) ease-out infinite alternate var(--delay);
  transform: translate3d(var(--x), var(--y), 0);
  opacity: 0;

  /* Particle styling */
  border-radius: 50%;
  background: currentColor;
  color: #ffffff;

  position: absolute;
  width: calc(var(--size) * 0.1vmin);
  height: calc(var(--size) * 0.1vmin);
  contain: strict; /* Does this help or is translate3d already doing it*/
}

@keyframes animation {
  100% {
    transform: translate3d(var(--x2), var(--y2), 0);
    opacity: 1;
  }
}

.center {
  display: flex;
  min-height: 50vh;
  justify-content: center;
  align-content: center;
  align-items: center;
  overflow: hidden;
}

.et-slide {
  height: 90.2vh;
  position: relative;
  background: #eeeeee00;
  text-align: center;
  padding: 0 2em;
  h1 {
    font-size: 2rem;
    margin: 0;
    letter-spacing: 1rem;
  }
  h3 {
    font-size: 1.1rem;
    color: #ffffff;
    letter-spacing: 0.3rem;
    opacity: 0.6;
  }
}

.card {
  background: linear-gradient(200deg, transparent, rgba(230, 240, 255, 0.277), transparent);
  background-clip: padding-box;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  margin: 20px auto;
  max-width: 90%;
  height: 95%; /* You might need to adjust this to 'auto' if content overflows */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative; /* Make sure itâ€™s relative for absolute children */
  z-index: 0;
  overflow: visible;
  flex-basis: 100%;
  padding: 0px;
  background-color: #ffffff00;
}

.card-content {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  padding: 15px;
}

.graph-container {
  width: 46vw;
  height: 73vh;
  align-self: flex-start;
  border-radius: 0.375rem;
  left: 1%;
  background: linear-gradient(to bottom, #8676a6, #a4a2bb); /* Gradient from purple to white */
  box-shadow: 0 0 40px rgba(0, 0, 0, 0.2);
  position: absolute;
}

.graph {
  align-self: flex-start;
  border-radius: 0.375rem;
  align-items: center;
  background: linear-gradient(to bottom, #8676a6, #a4a2bb); /* Gradient from purple to white */
}

@keyframes subtle-zoom {
  0%,
  100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.01);
  }
}

.info-card {
  position: absolute; /* Adjust if the card needs to be within the flow instead */
  top: 12%; /* Align to the top of the parent container */
  left: 60.5%;
  width: 30vw;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  padding: 10px;
  text-align: center;
  z-index: 2; /* Make sure it's above other elements if needed */
}

#networkHeading {
  margin-top: 1rem;
}

.card-header {
  font-size: 1.5rem;
  color: #333;
}

.card-text {
  font-size: 1.2rem;
  color: #666;
}

.stats-cards {
  width: 80vw; /* Adjust width as necessary */
  height: 60vh; /* Adjust height as necessary */
  margin: 20px auto; /* Center the container */
  overflow: hidden; /* Keeps child elements within the container */
}

.top-artist,
.top-genre,
.mainstream-score {
  position: absolute;
  width: 25vw; /* Adjust width if necessary */
  transform-origin: center; /* Ensures rotation happens centrally */
  transition: transform 0.3s ease-in-out; /* Smooth transformation */
  scale: 0.8;
  box-shadow: 2px 20px 30px rgba(0, 0, 0, 0.2); /* Increased box shadow for more depth */
  background: linear-gradient(to bottom, #8578e2, #8676a6); /* Gradient from purple to white */
  border-radius: 10px;
  color: white;
}

.top-artist {
  top: 51%;
  left: 52%;
  transform: rotate(-3deg); /* Tilt left */
  z-index: 6;
}

.mainstream-score {
  top: 55%;
  left: 75%;
  transform: rotate(3deg); /* Tilt right */
  z-index: 6;
  opacity: 100%;
}

.top-genre {
  top: 76%;
  left: 63%;
  z-index: 5;
}

/* Optional: Hover effect to lift card on hover */
.top-artist:hover,
.top-genre:hover,
.mainstream-score:hover {
  transform: scale(1.05) rotate(0deg); /* Un-rotate and scale up slightly */
}

.top-artist-container,
.top-genre-container,
.mainstream-score-container {
  display: flex;
  flex-direction: row;
  padding: 10px;
  margin: 10px;
}

.top-genre-container,
.mainstream-score-container {
  justify-content: center;
}

.top-artist-text {
  display: flex;
  flex-direction: column;
  margin-left: 10px;
  align-items: start;
}

.artist-controls {
  display: flex;
  align-items: center; /* Ensures vertical alignment */
  gap: 10px; /* Maintains a consistent space between elements */
}

#topArtistName {
  font-size: 35px;
}

#playButton {
  width: 35px; /* Fixed width */
  height: 35px; /* Fixed height */
  border-radius: 50%; /* Circle shape */
  background-color: #202020; /* Dark background for button */
  color: white; /* Ensures text/icon is visible */
  border: none; /* Removes the border for a cleaner look */
  cursor: pointer; /* Cursor indicates clickable button */
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  padding: 0; /* Reset padding to prevent size adjustments */
  font-size: 20px; /* Adjust font size as needed but keep it consistent */
  line-height: 1; /* Ensures the icons don't affect the button's line height */
}

#topArtistImage {
  border-radius: 0.375rem; /* Rounded corners */
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);
}

.sound-wave {
  display: flex;
  justify-content: center; /* Adjusted for better distribution */
  align-items: flex-end;
  width: 100%;
  height: 30px; /* Height of the wave area */
  position: absolute;
  bottom: 0;
  left: 0;
  overflow: hidden; /* Prevents bars from flowing out of the container */
  z-index: 1000;
}

.bar {
  width: 5px; /* Adjust the width of each bar if needed */
  height: 10px; /* Initial height of each bar */
  margin: 0 1px; /* Adjust the spacing between bars if needed */
  background-color: white;
  border-radius: 2px; /* Rounds the bars */
  animation: sound-wave-animation 1s infinite ease-in-out;
}

.bar:nth-child(1) {
  animation-delay: 0.81s;
}
.bar:nth-child(2) {
  animation-delay: 0.93s;
}
.bar:nth-child(3) {
  animation-delay: 0.7s;
}
.bar:nth-child(4) {
  animation-delay: 0.27s;
}
.bar:nth-child(5) {
  animation-delay: 0.94s;
}
.bar:nth-child(6) {
  animation-delay: 0.92s;
}
.bar:nth-child(7) {
  animation-delay: 0.36s;
}
.bar:nth-child(8) {
  animation-delay: 0.28s;
}
.bar:nth-child(9) {
  animation-delay: 0.36s;
}
.bar:nth-child(10) {
  animation-delay: 0.49s;
}
.bar:nth-child(11) {
  animation-delay: 0.66s;
}
.bar:nth-child(12) {
  animation-delay: 0.64s;
}
.bar:nth-child(13) {
  animation-delay: 0.77s;
}
.bar:nth-child(14) {
  animation-delay: 0.54s;
}
.bar:nth-child(15) {
  animation-delay: 0.01s;
}
.bar:nth-child(16) {
  animation-delay: 0.24s;
}
.bar:nth-child(17) {
  animation-delay: 0.96s;
}
.bar:nth-child(18) {
  animation-delay: 0s;
}
.bar:nth-child(19) {
  animation-delay: 0.98s;
}
.bar:nth-child(20) {
  animation-delay: 0.53s;
}
.bar:nth-child(21) {
  animation-delay: 0.5s;
}
.bar:nth-child(22) {
  animation-delay: 0.04s;
}
.bar:nth-child(23) {
  animation-delay: 0.61s;
}
.bar:nth-child(24) {
  animation-delay: 0.13s;
}
.bar:nth-child(25) {
  animation-delay: 0.64s;
}
.bar:nth-child(26) {
  animation-delay: 0.04s;
}
.bar:nth-child(27) {
  animation-delay: 0.53s;
}
.bar:nth-child(28) {
  animation-delay: 0.59s;
}
.bar:nth-child(29) {
  animation-delay: 0.39s;
}
.bar:nth-child(30) {
  animation-delay: 0.86s;
}

@keyframes sound-wave-animation {
  0%,
  100% {
    height: 5px;
  }
  50% {
    height: 20px;
  } /* Adjust the height to how tall you want the bars to go */
}

.artist-track {
  font-size: 20px;
  margin-top: 5px; /* Space between controls and track name */
}

.mainstream-score-container {
  flex-direction: column;
  justify-content: center; /* Centers children vertically in the container */
  align-items: center; /* Centers children horizontally in the container */
}

.score-bar {
  position: relative;
  width: 60%; /* Full width of the container */
  height: 25px; /* Height of the bar */
  background-color: #ddd; /* Background of the unfilled bar */
  border-radius: 5px;
  overflow: hidden; /* Ensures that the inner div doesn't spill out of the border radius */
}

.score-fill {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100%;
  width: 66.97%;
  text-align: center;
  line-height: 20px; /* Aligns text vertically */
  color: white;
  position: absolute;
  left: 0;
  top: 0;
  border-radius: 5px;
}

.popularity-score {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.taste-category {
  margin-top: 5px;
  font-size: 25px;
}

.top-genre-container {
  padding: 5px;
  margin: 5px;
}

#topGenre {
  font-size: 25px;
}

.stats-header {
  background-color: rgb(26, 20, 37);
  color: white;
  border-radius: 10px 10px 0 0;
  padding: 10px;
  font-size: 25px;
  text-align: center;
}

/* Recapped Section */

.description-center-content {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  height: 100%;
  width: 100%;
}

h5 {
  font-family: 'neue-plak', sans-serif;
  color: #ffffff;
  font-size: 0.9vw;
  letter-spacing: 2px;
}

h2 {
  font-family: 'neue-plak' !important;
  font-size: 3.5vw;
  color: #ffffff;
  text-align: center;
  margin-right: -3.5vw;
}

.description-text {
  margin-right: -4vw;
  letter-spacing: 1px;
  text-align: center;
  max-height: 70vh;
}

a {
  color: -webkit-link;
}

.title-photo {
  max-width: 27rem;
}

.description-padding {
  padding-right: 40px;
  padding-left: 40px;
  padding-bottom: 40px;
}

.container {
  min-height: 75vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.card {
  flex-basis: 100%;
  padding: 0px;
  border: 1px solid #cccccc00;
  background-color: #ffffff00;
}

h4 {
  font-family: 'neue-plak' !important;
  font-size: 0.875rem;
  font-weight: 700;
  text-transform: uppercase;
  color: #ffffff;
  letter-spacing: 1px;
}

/*
** Styling for the left card
*/

.left-card {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100%;
}

$total-lines-custom: 8;
$left-offset-custom: 1.9vw;
$clip-height-custom: 3.2vw;
$line-height-custom: $clip-height-custom - 0.256vw;

.Words {
  margin: 0;
  padding: 2% 0;
  font-family: alro, Helvetica, Arial, sans-serif;
  font-size: 2.81vw;
  font-weight: 900;
  transform: translate3d(0, 0, 0);
  -webkit-font-smoothing: antialiased;
  font-kerning: normal;
  -webkit-text-size-adjust: 100%;
  margin-right: 49%;
  margin-bottom: 3vh;
}

.Words-line {
  height: $clip-height-custom;
  overflow: hidden;
  position: relative;

  &:nth-child(odd) {
    transform: skew(60deg, -30deg) scaleY(0.66667);
  }

  &:nth-child(even) {
    transform: skew(0deg, -30deg) scaleY(1.33333);
  }

  @for $i from 1 through $total-lines-custom + 1 {
    &:nth-child(#{$i}) {
      left: $left-offset-custom * $i;
    }
  }
}

p {
  height: $clip-height-custom;
  //line-height: $line-height-custom;
  padding: 0 0.51vw;
  transition: all 0.5s ease-in-out;
  transform: translate3d(0, -1vw 0);
  vertical-align: top;
  white-space: nowrap;
  color: #ffffff;
}

.Words:hover {
  p {
    transform: translate3d(0, -($clip-height-custom)-1, 0);
  }
}

.recapped-photo {
  margin-top: 2.4rem;
  max-width: 23vw;
}
