/* ==========================================================================
Main page styles
========================================================================== */
@font-face {
  font-family: 'alro';
  src: url('../../content/fonts/alro-alro-bold-700.ttf') format('truetype');
  font-weight: normal;
  font-style: normal;
}

.row.justify-content-center {
  display: flex;
  justify-content: center;
}

.particle {
  /* Starting values */
  --angle: (5 * var(--index));
  --radius: 20;
  --x: calc(sin(var(--angle)) * var(--radius) * 1vmin);
  --y: calc(cos(var(--angle)) * var(--radius) * 1vmin);

  --angle2: calc(var(--index) * 1turn / var(--total));
  --x2: calc(sin(var(--angle2)) * var(--radius) * 1vmin);
  --y2: calc(cos(var(--angle2)) * var(--radius) * 1vmin);

  --size: 3;
  --speed: 3s;
  --delay: calc(var(--index) * var(--speed) / var(--total) * 4);

  --hue-angle: 10;
  --hue-range: 90;
  --hue-start: 20;

  /* Animation */
  animation: animation var(--speed) ease-out infinite alternate var(--delay);
  transform: translate3d(var(--x), var(--y), 0);
  opacity: 0;

  /* Particle styling */
  border-radius: 50%;
  background: currentColor;
  color: #ffffff;

  position: absolute;
  width: calc(var(--size) * 0.1vmin);
  height: calc(var(--size) * 0.1vmin);
  contain: strict; /* Does this help or is translate3d already doing it*/
}

@keyframes animation {
  100% {
    transform: translate3d(var(--x2), var(--y2), 0);
    opacity: 1;
  }
}

.center {
  display: flex;
  min-height: 50vh;
  justify-content: center;
  align-content: center;
  align-items: center;
  overflow: hidden;
}

.et-slide {
  height: 90.2vh;
  position: relative;
  background: #eeeeee00;
  text-align: center;
  padding: 0 2em;
  h1 {
    font-size: 2rem;
    margin: 0;
    letter-spacing: 1rem;
  }
  h3 {
    font-size: 1.1rem;
    color: #ffffff;
    letter-spacing: 0.3rem;
    opacity: 0.6;
  }
}
