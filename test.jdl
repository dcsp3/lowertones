entity Song (songTable) {
    //attributes from spotify get_track call
    songSpotifyID String required,
    songTitle String required,
    songDuration Integer required,
    songAlbumType AlbumType required,
    songAlbumID String required,
    songExplicit Boolean required,
    songPopularity Integer required,
    songPreviewURL String,

    //attributes from spotify get_track_features call
    songTrackFeaturesAdded Boolean required,					//false by default
    songAcousticness Float,
    songDanceability Float,
    songEnergy Float,
    songInstrumentalness Float,
    songLiveness Float,
    songLoudness Float,
    songSpeechiness Float,
    songTempo Float,
    songValence Float,
    songKey Integer,
    songTimeSignature Integer,

    //application attributes
    songDateAddedToDB LocalDate required,
    songDateLastModified LocalDate required,
	
	recordingMBID String
}
enum AlbumType {
    ALBUM, SINGLE, COMPILATION
}

entity Album (albumTable) {
    //attributes from spotify get_track call
    albumSpotifyID String required,
    albumName String required,
    albumCoverArt String required, 							// Replace with appropriate type for href / file / path
    albumReleaseDate LocalDate required,
    releaseDatePrecision ReleaseDatePrecision required,
    albumPopularity Integer required,
    albumType AlbumType required,

    //external ids
    spotifyAlbumUPC String,
    spotifyAlbumEAN String,
    spotifyAlbumISRC String,

    //application attributes
    dateAddedToDB LocalDate required,
    dateLastModified LocalDate required,

    //attributes from third-party API call
    musicbrainzMetadataAdded Boolean required,					//false by default
    musicbrainzID String
}
enum ReleaseDatePrecision {
    YEAR, MONTH, DAY
}

// artistsTable - defines main artists (e.g. The Beatles)
entity MainArtist (artistsTable) {
    //spotify attributes
    artistSpotifyID String required,
    artistName String required,
    artistPopularity Integer required,
    artistImageSmall String,
    artistImageMedium String,
    artistImageLarge String,
    artistFollowers Integer,

    //application attributes
    dateAddedToDB LocalDate,
    dateLastModified LocalDate,
	musicbrainzID String
}

//defines individual contributors (e.g. John Lennon)
entity Contributor{
    name String,
    role String,
	instrument String,
    musicbrainzID String
}

entity MusicBrainzSongAttribution{
	recordingMBID String,
	recordingTitle String,
	songMainArtistName String,
	songMainArtistID Integer,
	songContributorMBID String,
	songContributorName String,
	songContributorRole String,
	songContributorInstrument String
}

entity AppUser (appUserTable) {
    //attributes from spotify get_current_user_profile call
    spotifyUserID String required,
    name String required,
    email String required,

    //application attributes
    userImageLarge String,
    userImageMedium String,
    userImageSmall String,
    spotifyRefreshToken String maxlength (1000),
    spotifyAuthToken String maxlength (1000),
    lastLoginDate LocalDate required,
    discoverWeeklyBufferSettings Integer required, 			//0 by default, 0 is off, 1 is save to new playlist, 2 is save to same playlist
    discoverWeeklyBufferPlaylistID String, 					//playlist ID that discover weekly is appended to

    //preferences
    highContrastMode Boolean required,
    textSize Integer required 								//0 by default, 0 is small, 1 is medium, 2 is large
	emailUpdatesEnabled Boolean required
}

entity Vault {
	sourcePlaylistID String,
	playlistName String,
	resultPlaylistID String,
	frequency String,
	type String,
	playlistCoverURL String,
	playlistSnapshotID String
}

entity Playlist (playlistTable) {
    //application attributes
    dateAddedToDB LocalDate required,
    dateLastModified LocalDate required,

    //attributes from spotify get_current_user_profile call
    playlistSpotifyID String required,
    playlistName String required,
    playlistSnapshotID String required, 
    playlistImageLarge String,
    playlistImageMedium String,
    playlistImageSmall String
}

entity RelatedArtists {
    mainArtistSptfyID String required,
    relatedArtistSpotifyID1 String required,
    relatedArtistSpotifyID2 String required,
    relatedArtistSpotifyID3 String required,
    relatedArtistSpotifyID4 String required,
    relatedArtistSpotifyID5 String required,
    relatedArtistSpotifyID6 String required,
    relatedArtistSpotifyID7 String required,
    relatedArtistSpotifyID8 String required,
    relatedArtistSpotifyID9 String required,
    relatedArtistSpotifyID10 String required,
    relatedArtistSpotifyID11 String required,
    relatedArtistSpotifyID12 String required,
    relatedArtistSpotifyID13 String required,
    relatedArtistSpotifyID14 String required,
    relatedArtistSpotifyID15 String required,
    relatedArtistSpotifyID16 String required,
    relatedArtistSpotifyID17 String required,
    relatedArtistSpotifyID18 String required,
    relatedArtistSpotifyID19 String required,
    relatedArtistSpotifyID20 String required
}

relationship OneToOne {
    AppUser to User
    MainArtist to RelatedArtists
}

relationship OneToMany {
    Album to Song
    AppUser to Playlist

    Song to SpotifyGenreEntity
    Album to SpotifyGenreEntity
    MainArtist to SpotifyGenreEntity

    Song to MusicbrainzGenreEntity
    Album to MusicbrainzGenreEntity
    MainArtist to MusicbrainzGenreEntity
}

relationship ManyToOne {
    PlaylistSongJoin to Playlist
    PlaylistSongJoin to Song
    SongArtistJoin to Song
    SongArtistJoin to MainArtist
}

relationship ManyToMany {
    MainArtist to Album
    Song to Contributor
}

entity SpotifyGenreEntity {
    spotifyGenre String required
}

entity MusicbrainzGenreEntity {
    musicbrainzGenre String required
}

// playlistSongTable - join table linking playlists and songs
entity PlaylistSongJoin (playlistSongTable) {
    songOrderIndex Integer required,
    songDateAdded LocalDate required
}

// songArtistTable - join table linking songs and artistsn
entity SongArtistJoin (songArtistTable) {
    topTrackIndex Integer
}
